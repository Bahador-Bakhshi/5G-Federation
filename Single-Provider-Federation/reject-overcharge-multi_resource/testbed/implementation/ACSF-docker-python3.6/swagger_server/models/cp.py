# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.vnf_link import VNFLink  # noqa: F401,E501
from swagger_server import util


class CP(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cp_id: str=None, vnf_link: VNFLink=None):  # noqa: E501
        """CP - a model defined in Swagger

        :param cp_id: The cp_id of this CP.  # noqa: E501
        :type cp_id: str
        :param vnf_link: The vnf_link of this CP.  # noqa: E501
        :type vnf_link: VNFLink
        """
        self.swagger_types = {
            'cp_id': str,
            'vnf_link': VNFLink
        }

        self.attribute_map = {
            'cp_id': 'cpId',
            'vnf_link': 'VNFLink'
        }
        self._cp_id = cp_id
        self._vnf_link = vnf_link

    @classmethod
    def from_dict(cls, dikt) -> 'CP':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CP of this CP.  # noqa: E501
        :rtype: CP
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cp_id(self) -> str:
        """Gets the cp_id of this CP.


        :return: The cp_id of this CP.
        :rtype: str
        """
        return self._cp_id

    @cp_id.setter
    def cp_id(self, cp_id: str):
        """Sets the cp_id of this CP.


        :param cp_id: The cp_id of this CP.
        :type cp_id: str
        """
        if cp_id is None:
            raise ValueError("Invalid value for `cp_id`, must not be `None`")  # noqa: E501

        self._cp_id = cp_id

    @property
    def vnf_link(self) -> VNFLink:
        """Gets the vnf_link of this CP.


        :return: The vnf_link of this CP.
        :rtype: VNFLink
        """
        return self._vnf_link

    @vnf_link.setter
    def vnf_link(self, vnf_link: VNFLink):
        """Sets the vnf_link of this CP.


        :param vnf_link: The vnf_link of this CP.
        :type vnf_link: VNFLink
        """

        self._vnf_link = vnf_link
